// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2813.SkrrtSkrrt.subsystems;

import org.usfirst.frc2813.SkrrtSkrrt.RobotMap;
import org.usfirst.frc2813.SkrrtSkrrt.commands.OIDrive;
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {
    private final WPI_VictorSPX leftMotor = RobotMap.driveTrainLeftMotor;
    private final WPI_VictorSPX rightMotor = RobotMap.driveTrainRightMotor;
    private final RobotDrive robotDrive = RobotMap.driveTrainRobotDrive;
    
    public static final double speedMax = 1;
    public static final double deceleration = 0.02;
    
    public static double leftSpeed = 0;
    public static double rightSpeed = 0;


    @Override
    public void initDefaultCommand() {
    	setDefaultCommand(new OIDrive());

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
    }
    
    public void tankDrive(Joystick leftJoystick, Joystick rightJoystick) {
    	//Joystick value has been squared for controller convenience, remove or modify if necessary
    	double leftJoystickValueSQRD = Math.pow(leftJoystick.getY(),2);
    	double rightJoystickValueSQRD = Math.pow(leftJoystick.getY(),2);
    	
    	if(leftJoystickValueSQRD > leftSpeed) leftSpeed = leftJoystickValueSQRD;
    	if(rightJoystickValueSQRD > rightSpeed) rightSpeed = rightJoystickValueSQRD;
    	
    	robotDrive.tankDrive(leftSpeed > speedMax ? speedMax : leftSpeed, rightSpeed > speedMax ? speedMax : rightSpeed);
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

